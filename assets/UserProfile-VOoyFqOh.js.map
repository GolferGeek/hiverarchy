{"version":3,"file":"UserProfile-VOoyFqOh.js","sources":["../../src/pages/UserProfile.jsx"],"sourcesContent":["import { useState, useEffect } from 'react'\nimport { Box, TextField, Button, Typography, Container } from '@mui/material'\nimport MarkdownEditor from '../components/MarkdownEditor'\nimport ImageUpload from '../components/ImageUpload'\nimport { supabase } from '../lib/supabase'\nimport { useAI } from '../services/ai/index.jsx'\nimport { useProfile } from '../contexts/ProfileContext'\n\nconst UserProfile = () => {\n  const [username, setUsername] = useState('')\n  const [resume, setResume] = useState('')\n  const [logo, setLogo] = useState(null)\n  const [tagline, setTagline] = useState('')\n  const [loading, setLoading] = useState(false)\n  const [message, setMessage] = useState('')\n  const [apiOpenai, setApiOpenai] = useState('')\n  const [apiAnthropic, setApiAnthropic] = useState('')\n  const [apiGrok, setApiGrok] = useState('')\n  const [apiPerplexity, setApiPerplexity] = useState('')\n  const [apiSerper, setApiSerper] = useState('')\n  const ai = useAI()\n  const { fetchProfiles } = useProfile()\n\n  useEffect(() => {\n    getProfile()\n  }, [])\n\n  const getFullLogoUrl = (filename) => {\n    if (!filename) return null\n    if (filename.startsWith('http')) return filename\n    return `${import.meta.env.VITE_SUPABASE_URL}/storage/v1/object/public/profile_logos/${filename}`\n  }\n\n  const getProfile = async () => {\n    try {\n      const { data: { user } } = await supabase.auth.getUser()\n      if (!user) throw new Error('No user found')\n\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('id', user.id)\n        .single()\n\n      if (error) throw error\n\n      if (data) {\n        setUsername(data.username || '')\n        setResume(data.resume || '')\n        setLogo(data.logo ? getFullLogoUrl(data.logo) : null)\n        setTagline(data.tagline || '')\n        setApiOpenai(data.api_openai || '')\n        setApiAnthropic(data.api_anthropic || '')\n        setApiGrok(data.api_grok || '')\n        setApiPerplexity(data.api_perplexity || '')\n        setApiSerper(data.api_serper || '')\n      }\n    } catch (error) {\n      console.error('Error fetching profile:', error.message)\n      setMessage('Error fetching profile')\n    }\n  }\n\n  const handleLogoUpload = (uploadedImages) => {\n    if (uploadedImages && uploadedImages.length > 0) {\n      setLogo(getFullLogoUrl(uploadedImages[0]))\n    }\n  }\n\n  const handleLogoRemove = async () => {\n    setLogo(null)\n  }\n\n  const updateProfile = async () => {\n    try {\n      setLoading(true)\n      const { data: { user } } = await supabase.auth.getUser()\n      if (!user) throw new Error('No user found')\n\n      // Validate username\n      if (!username.trim()) {\n        throw new Error('Username is required')\n      }\n\n      // Check if username is already taken (excluding current user)\n      const { data: existingUser, error: checkError } = await supabase\n        .from('profiles')\n        .select('id')\n        .eq('username', username.trim())\n        .neq('id', user.id)\n        .single()\n\n      if (existingUser) {\n        throw new Error('Username is already taken')\n      }\n\n      // Extract filename from full URL for storage\n      let logoFilename = null\n      if (logo) {\n        const matches = logo.match(/\\/([^/]+)$/)\n        logoFilename = matches ? matches[1] : null\n      }\n\n      const updates = {\n        id: user.id,\n        username: username.trim(),\n        resume,\n        logo: logoFilename,\n        tagline,\n        'api_openai': apiOpenai,\n        'api_anthropic': apiAnthropic,\n        'api_grok': apiGrok,\n        'api_perplexity': apiPerplexity,\n        'api_serper': apiSerper,\n        updated_at: new Date().toISOString()\n      }\n\n      const { error } = await supabase\n        .from('profiles')\n        .upsert(updates)\n\n      if (error) throw error\n      \n      // Refresh AI services if available\n      if (ai?.loadServices) {\n        await ai.loadServices()\n      }\n\n      // Refresh profiles to update navbar and other components\n      await fetchProfiles()\n      \n      setMessage('Profile updated successfully')\n    } catch (error) {\n      console.error('Error updating profile:', error)\n      setMessage(`Error updating profile: ${error.message}`)\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return (\n    <Container maxWidth=\"md\">\n      <Box sx={{ mt: 4, mb: 2 }}>\n        <Typography variant=\"h4\" component=\"h1\" gutterBottom>\n          User Profile\n        </Typography>\n        {message && (\n          <Typography color={message.includes('Error') ? 'error' : 'success'} gutterBottom>\n            {message}\n          </Typography>\n        )}\n      </Box>\n\n      <Box component=\"form\" noValidate sx={{ mt: 1 }}>\n        <TextField\n          margin=\"normal\"\n          required\n          fullWidth\n          label=\"Username\"\n          value={username}\n          onChange={(e) => setUsername(e.target.value)}\n          disabled={loading}\n        />\n\n        <TextField\n          margin=\"normal\"\n          fullWidth\n          label=\"Tagline\"\n          value={tagline}\n          onChange={(e) => setTagline(e.target.value)}\n          disabled={loading}\n          helperText=\"A brief description that appears on the home page\"\n        />\n\n        <Box sx={{ mt: 2, mb: 2 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Resume (Markdown)\n          </Typography>\n          <MarkdownEditor\n            value={resume}\n            onChange={setResume}\n          />\n        </Box>\n\n        <Box sx={{ mt: 2, mb: 2 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            Logo\n          </Typography>\n          <ImageUpload \n            onUpload={handleLogoUpload}\n            onRemove={handleLogoRemove}\n            existingImages={logo ? [logo] : []}\n            bucket=\"profile_logos\"\n            showCopyOption={false}\n          />\n        </Box>\n\n        <Box sx={{ mt: 2, mb: 2 }}>\n          <Typography variant=\"subtitle1\" gutterBottom>\n            API Keys\n          </Typography>\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"OpenAI API Key\"\n            value={apiOpenai}\n            onChange={(e) => setApiOpenai(e.target.value)}\n            type=\"password\"\n            disabled={loading}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"Anthropic API Key\"\n            value={apiAnthropic}\n            onChange={(e) => setApiAnthropic(e.target.value)}\n            type=\"password\"\n            disabled={loading}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"Grok2 API Key\"\n            value={apiGrok}\n            onChange={(e) => setApiGrok(e.target.value)}\n            type=\"password\"\n            disabled={loading}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"Perplexity API Key\"\n            value={apiPerplexity}\n            onChange={(e) => setApiPerplexity(e.target.value)}\n            type=\"password\"\n            disabled={loading}\n          />\n          <TextField\n            margin=\"normal\"\n            fullWidth\n            label=\"Serper API Key\"\n            value={apiSerper}\n            onChange={(e) => setApiSerper(e.target.value)}\n            type=\"password\"\n            disabled={loading}\n            helperText=\"API key for Serper.dev Google search service\"\n          />\n        </Box>\n\n        <Button\n          fullWidth\n          variant=\"contained\"\n          onClick={updateProfile}\n          disabled={loading}\n          sx={{ mt: 3, mb: 2 }}\n        >\n          {loading ? 'Saving...' : 'Save Profile'}\n        </Button>\n      </Box>\n    </Container>\n  )\n}\n\nexport default UserProfile\n"],"names":["UserProfile","username","setUsername","useState","resume","setResume","logo","setLogo","tagline","setTagline","loading","setLoading","message","setMessage","apiOpenai","setApiOpenai","apiAnthropic","setApiAnthropic","apiGrok","setApiGrok","apiPerplexity","setApiPerplexity","apiSerper","setApiSerper","ai","useAI","fetchProfiles","useProfile","useEffect","getProfile","getFullLogoUrl","filename","user","supabase","data","error","handleLogoUpload","uploadedImages","handleLogoRemove","updateProfile","existingUser","checkError","logoFilename","matches","updates","jsxs","Container","Box","jsx","Typography","TextField","MarkdownEditor","ImageUpload","Button"],"mappings":"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"}