{"version":3,"file":"Posts-B3I6h7Nk.js","sources":["../../src/contexts/SiteProfileContext.jsx","../../src/pages/Posts.jsx"],"sourcesContent":["import { createContext, useContext, useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport { supabase } from '../lib/supabase'\nimport { useAuth } from './AuthContext'\n\nconst SiteProfileContext = createContext({})\n\nexport function SiteProfileProvider({ children }) {\n  const [siteProfile, setSiteProfile] = useState(null)\n  const [loading, setLoading] = useState(true)\n  const { username } = useParams()\n  const navigate = useNavigate()\n  const { user } = useAuth()\n  const defaultUsername = import.meta.env.VITE_DEFAULT_USERNAME\n  const [retryCount, setRetryCount] = useState(0)\n\n  const fetchProfile = async (username) => {\n    try {\n      const { data, error } = await supabase\n        .from('profiles')\n        .select('*')\n        .eq('username', username)\n        .single()\n\n      if (error) throw error\n      setSiteProfile(data)\n    } catch (error) {\n      setSiteProfile(null)\n    }\n  }\n\n  useEffect(() => {\n    const profileUsername = username || defaultUsername\n    if (profileUsername) {\n      fetchProfile(profileUsername)\n    }\n  }, [username, defaultUsername])\n\n  const isOwner = () => {\n    if (!user || !siteProfile) return false\n    return user.id === siteProfile.id\n  }\n\n  const value = {\n    siteProfile,\n    loading,\n    isOwner,\n    fetchProfile,\n    defaultUsername\n  }\n\n  return (\n    <SiteProfileContext.Provider value={value}>\n      {children}\n    </SiteProfileContext.Provider>\n  )\n}\n\nexport function useSiteProfile() {\n  return useContext(SiteProfileContext)\n}\n","import { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { \n  Box, \n  Container, \n  Typography, \n  Button, \n  TextField,\n  Paper,\n  IconButton,\n  InputAdornment,\n  Pagination,\n  CircularProgress\n} from '@mui/material'\nimport DeleteIcon from '@mui/icons-material/Delete'\nimport SearchIcon from '@mui/icons-material/Search'\nimport { supabase } from '../lib/supabase'\nimport { useAuth } from '../contexts/AuthContext'\nimport { useSiteProfile } from '../contexts/SiteProfileContext'\nimport ConfirmModal from '../components/ConfirmModal'\nimport { useProfile } from '../contexts/ProfileContext'\n\nfunction Posts() {\n  const navigate = useNavigate()\n  const { user } = useAuth()\n  const { siteProfile, loading: profileLoading } = useSiteProfile()\n  const { currentUsername, loading: profileContextLoading } = useProfile()\n  const [posts, setPosts] = useState([])\n  const [loading, setLoading] = useState(true)\n  const [searchTerm, setSearchTerm] = useState('')\n  const [page, setPage] = useState(1)\n  const [totalPages, setTotalPages] = useState(0)\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n  const [postToDelete, setPostToDelete] = useState(null)\n  const postsPerPage = 10\n\n  const fetchPosts = async () => {\n    if (!user?.id) return\n\n    try {\n      setLoading(true)\n      const { data, error } = await supabase\n        .from('posts')\n        .select(`\n          *,\n          images (\n            url\n          )\n        `)\n        .eq('user_id', user.id)\n        .order('created_at', { ascending: false })\n\n      if (error) throw error\n      setPosts(data || [])\n    } catch (error) {\n      setError('Failed to fetch posts')\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  useEffect(() => {\n    if (user?.id && currentUsername && currentUsername !== 'undefined') {\n      fetchPosts()\n    }\n  }, [user?.id, currentUsername])\n\n  const handleSearch = (event) => {\n    setSearchTerm(event.target.value)\n    setPage(1) // Reset to first page when searching\n  }\n\n  const handlePageChange = (event, value) => {\n    setPage(value)\n  }\n\n  const handleDeleteClick = (post) => {\n    setPostToDelete(post)\n    setShowDeleteModal(true)\n  }\n\n  const handleDeleteConfirm = async () => {\n    if (!postToDelete) return\n\n    try {\n      const { error: imageError } = await supabase\n        .from('images')\n        .delete()\n        .eq('post_id', postToDelete.id)\n\n      if (imageError) throw imageError\n\n      const { error: postError } = await supabase\n        .from('posts')\n        .delete()\n        .eq('id', postToDelete.id)\n\n      if (postError) throw postError\n\n      setPosts(posts.filter(p => p.id !== postToDelete.id))\n      setShowDeleteModal(false)\n      setPostToDelete(null)\n    } catch (error) {\n      console.error('Error deleting post:', error)\n    }\n  }\n\n  const handlePostClick = (post) => {\n    if (!currentUsername || currentUsername === 'undefined') {\n      console.warn('Username not available')\n      return\n    }\n    navigate(`/${currentUsername}/post/${post.id}`)\n  }\n\n  if (loading || profileLoading || profileContextLoading || !currentUsername || currentUsername === 'undefined') {\n    return (\n      <Box sx={{ display: 'flex', justifyContent: 'center', alignItems: 'center', height: '100vh' }}>\n        <CircularProgress />\n      </Box>\n    )\n  }\n\n  return (\n    <Container maxWidth=\"lg\" sx={{ mt: 4, mb: 4 }}>\n      <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 4 }}>\n        <Typography variant=\"h4\" component=\"h1\">\n          Manage Posts\n        </Typography>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={() => {\n            if (!currentUsername || currentUsername === 'undefined') {\n              console.warn('Username not available')\n              return\n            }\n            navigate(`/${currentUsername}/create`)\n          }}\n        >\n          Create Post\n        </Button>\n      </Box>\n\n      <TextField\n        fullWidth\n        variant=\"outlined\"\n        placeholder=\"Search posts...\"\n        value={searchTerm}\n        onChange={handleSearch}\n        sx={{ mb: 4 }}\n        InputProps={{\n          startAdornment: (\n            <InputAdornment position=\"start\">\n              <SearchIcon />\n            </InputAdornment>\n          ),\n        }}\n      />\n\n      {posts.map((post) => {\n        const imageUrl = post.images?.[0]?.url;\n        let parsedImageUrl = null;\n        try {\n          const parsed = JSON.parse(imageUrl);\n          parsedImageUrl = parsed[0];\n        } catch (e) {\n          // If parsing fails, use the original URL\n          parsedImageUrl = imageUrl;\n        }\n\n        return (\n          <Paper key={post.id} sx={{ p: 2, mb: 2, display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <Box sx={{ display: 'flex', gap: 2, alignItems: 'center', flex: 1 }}>\n              <Box sx={{ width: 100, flexShrink: 0 }}>\n                {parsedImageUrl && (\n                  <Box\n                    component=\"img\"\n                    src={parsedImageUrl}\n                    alt={post.title}\n                    sx={{\n                      width: '100%',\n                      height: 100,\n                      objectFit: 'cover',\n                      borderRadius: 1\n                    }}\n                    onError={(e) => {\n                      e.target.src = '/images/default.jpg'\n                    }}\n                  />\n                )}\n              </Box>\n              <Box>\n                <Typography variant=\"h6\" component=\"h2\" sx={{ cursor: 'pointer' }} onClick={() => handlePostClick(post)}>\n                  {post.title}\n                </Typography>\n                <Typography variant=\"body2\" color=\"text.secondary\">\n                  Last updated: {new Date(post.updated_at).toLocaleDateString()}\n                </Typography>\n              </Box>\n            </Box>\n            <Box>\n              <IconButton onClick={() => handleDeleteClick(post)} color=\"error\">\n                <DeleteIcon />\n              </IconButton>\n            </Box>\n          </Paper>\n        );\n      })}\n\n      <Box sx={{ display: 'flex', justifyContent: 'center', mt: 4 }}>\n        <Pagination\n          count={totalPages}\n          page={page}\n          onChange={handlePageChange}\n          color=\"primary\"\n        />\n      </Box>\n\n      <ConfirmModal\n        open={showDeleteModal}\n        onClose={() => {\n          setShowDeleteModal(false)\n          setPostToDelete(null)\n        }}\n        onConfirm={handleDeleteConfirm}\n        title=\"Delete Post\"\n        content=\"Are you sure you want to delete this post? This action cannot be undone.\"\n      />\n    </Container>\n  )\n}\n\nexport default Posts\n"],"names":["SiteProfileContext","createContext","useSiteProfile","useContext","Posts","navigate","useNavigate","user","useAuth","siteProfile","profileLoading","currentUsername","profileContextLoading","useProfile","posts","setPosts","useState","loading","setLoading","searchTerm","setSearchTerm","page","setPage","totalPages","setTotalPages","showDeleteModal","setShowDeleteModal","postToDelete","setPostToDelete","fetchPosts","data","error","supabase","useEffect","handleSearch","event","handlePageChange","value","handleDeleteClick","post","handleDeleteConfirm","imageError","postError","p","handlePostClick","jsx","Box","CircularProgress","jsxs","Container","Typography","Button","TextField","InputAdornment","SearchIcon","imageUrl","_b","_a","parsedImageUrl","Paper","e","IconButton","DeleteIcon","Pagination","ConfirmModal"],"mappings":"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"}