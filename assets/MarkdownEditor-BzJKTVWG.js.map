{"version":3,"mappings":"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","names":["ContentCopyIcon","createSvgIcon","_jsx","BUCKET_CONFIGS","resizeImage","file","maxWidth","maxHeight","resolve","reject","img","width","height","ratio","canvas","blob","resizedFile","ImageUpload","onUpload","onRemove","existingImages","bucket","folder","showCopyOption","uploading","setUploading","useState","error","setError","bucketConfig","bucketReady","setBucketReady","createBucketIfNeeded","buckets","supabase","b","checkBuckets","useEffect","ready","validateImage","type","handleUpload","event","fileExt","fileName","filePath","uploadError","data","handleCopyMarkdown","imageUrl","markdownSyntax","Box","jsxs","Button","jsx","CircularProgress","Typography","ImageList","image","index","finalUrl","parsed","ImageListItem","Tooltip","IconButton","DeleteIcon","MDEditor","lazy","__vitePreload","n","MarkdownEditor","value","onChange","Suspense"],"ignoreList":[0],"sources":["../../node_modules/@mui/icons-material/esm/ContentCopy.js","../../src/components/ImageUpload.jsx","../../src/components/MarkdownEditor.jsx"],"sourcesContent":["\"use client\";\n\nimport createSvgIcon from \"./utils/createSvgIcon.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default createSvgIcon(/*#__PURE__*/_jsx(\"path\", {\n  d: \"M16 1H4c-1.1 0-2 .9-2 2v14h2V3h12zm3 4H8c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h11c1.1 0 2-.9 2-2V7c0-1.1-.9-2-2-2m0 16H8V7h11z\"\n}), 'ContentCopy');","import { useState, useEffect } from 'react'\nimport { supabase } from '../lib/supabase'\nimport {\n  Box,\n  Button,\n  CircularProgress,\n  ImageList,\n  ImageListItem,\n  IconButton,\n  Tooltip,\n  Typography,\n} from '@mui/material'\nimport ContentCopyIcon from '@mui/icons-material/ContentCopy'\nimport DeleteIcon from '@mui/icons-material/Delete'\n\nconst BUCKET_CONFIGS = {\n  'post-images': {\n    maxSize: 5242880, // 5MB\n    allowedTypes: ['image/*'],\n    maxDimensions: { width: 2000, height: 2000 }\n  },\n  'interest-images': {\n    maxSize: 5242880, // 5MB\n    allowedTypes: ['image/*'],\n    maxDimensions: { width: 2000, height: 2000 }\n  },\n  'profile_logos': {\n    maxSize: 1048576, // 1MB\n    allowedTypes: ['image/jpeg', 'image/png', 'image/gif'],\n    maxDimensions: { width: 500, height: 500 }\n  }\n}\n\n// Helper function to resize image\nconst resizeImage = (file, maxWidth, maxHeight) => {\n  return new Promise((resolve, reject) => {\n    const img = new Image()\n    img.src = URL.createObjectURL(file)\n    \n    img.onload = () => {\n      URL.revokeObjectURL(img.src)\n      \n      let width = img.width\n      let height = img.height\n      \n      // Calculate new dimensions while maintaining aspect ratio\n      if (width > maxWidth || height > maxHeight) {\n        const ratio = Math.min(maxWidth / width, maxHeight / height)\n        width = Math.floor(width * ratio)\n        height = Math.floor(height * ratio)\n      } else {\n        // If image is smaller than max dimensions, return original file\n        resolve(file)\n        return\n      }\n      \n      // Create canvas and resize image\n      const canvas = document.createElement('canvas')\n      canvas.width = width\n      canvas.height = height\n      \n      const ctx = canvas.getContext('2d')\n      ctx.drawImage(img, 0, 0, width, height)\n      \n      // Convert canvas to blob\n      canvas.toBlob((blob) => {\n        if (!blob) {\n          reject(new Error('Failed to resize image'))\n          return\n        }\n        // Create new file from blob\n        const resizedFile = new File([blob], file.name, {\n          type: file.type,\n          lastModified: Date.now()\n        })\n        resolve(resizedFile)\n      }, file.type)\n    }\n    \n    img.onerror = () => {\n      URL.revokeObjectURL(img.src)\n      reject(new Error('Failed to load image'))\n    }\n  })\n}\n\nfunction ImageUpload({ \n  onUpload, \n  onRemove, \n  existingImages = [], \n  bucket = 'post-images',\n  folder = null,\n  showCopyOption = true\n}) {\n  const [uploading, setUploading] = useState(false)\n  const [error, setError] = useState(null)\n  const bucketConfig = BUCKET_CONFIGS[bucket]\n  const [bucketReady, setBucketReady] = useState(false)\n\n  // Create bucket if it doesn't exist\n  const createBucketIfNeeded = async () => {\n    try {\n      const { data: buckets } = await supabase.storage.listBuckets()\n      const bucketExists = buckets.some(b => b.name === bucket)\n      \n      if (!bucketExists) {\n        try {\n          const { error } = await supabase.storage.createBucket(bucket, {\n            public: true,\n            allowedMimeTypes: bucketConfig.allowedTypes,\n            fileSizeLimit: bucketConfig.maxSize\n          })\n          \n          if (error) {\n            console.error('Error creating bucket:', error)\n            const { data: checkBuckets } = await supabase.storage.listBuckets()\n            return checkBuckets.some(b => b.name === bucket)\n          }\n        } catch (error) {\n          console.error('Error creating bucket:', error)\n          const { data: checkBuckets } = await supabase.storage.listBuckets()\n          return checkBuckets.some(b => b.name === bucket)\n        }\n      }\n      return true\n    } catch (error) {\n      console.error('Error checking/creating bucket:', error)\n      return false\n    }\n  }\n\n  useEffect(() => {\n    const initBucket = async () => {\n      const ready = await createBucketIfNeeded()\n      setBucketReady(ready)\n    }\n    initBucket()\n  }, [bucket])\n\n  const validateImage = async (file) => {\n    if (!bucketConfig) {\n      throw new Error('Invalid bucket configuration')\n    }\n\n    // Check file type\n    if (!bucketConfig.allowedTypes.some(type => {\n      if (type === 'image/*') return file.type.startsWith('image/')\n      return type === file.type\n    })) {\n      throw new Error('Invalid file type')\n    }\n\n    // Check file size\n    if (file.size > bucketConfig.maxSize) {\n      throw new Error(`File size must be less than ${bucketConfig.maxSize / 1048576}MB`)\n    }\n\n    return true\n  }\n\n  async function handleUpload(event) {\n    try {\n      if (!bucketReady) {\n        const ready = await createBucketIfNeeded()\n        if (!ready) {\n          throw new Error('Unable to initialize storage bucket')\n        }\n      }\n\n      setError(null)\n      setUploading(true)\n\n      const file = event.target.files[0]\n      if (!file) return\n\n      // Validate file type and size\n      await validateImage(file)\n\n      // Resize image if needed\n      const resizedFile = await resizeImage(\n        file,\n        bucketConfig.maxDimensions.width,\n        bucketConfig.maxDimensions.height\n      )\n\n      const fileExt = resizedFile.name.split('.').pop()\n      const fileName = `${Math.random()}.${fileExt}`\n      const filePath = folder ? `${folder}/${fileName}` : fileName\n\n      const { error: uploadError } = await supabase.storage\n        .from(bucket)\n        .upload(filePath, resizedFile)\n\n      if (uploadError) throw uploadError\n\n      const { data } = supabase.storage\n        .from(bucket)\n        .getPublicUrl(filePath)\n\n      if (data?.publicUrl) {\n        onUpload([data.publicUrl])\n      }\n    } catch (error) {\n      setError(error.message)\n      console.error('Error uploading image:', error)\n    } finally {\n      setUploading(false)\n    }\n  }\n\n  const handleCopyMarkdown = (imageUrl) => {\n    const markdownSyntax = `![image](${imageUrl})`\n    navigator.clipboard.writeText(markdownSyntax)\n  }\n\n  if (!bucketConfig) {\n    return <Typography color=\"error\">Invalid bucket configuration</Typography>\n  }\n\n  return (\n    <Box>\n      <Box sx={{ mb: 2 }}>\n        <Button\n          variant=\"contained\"\n          component=\"label\"\n          disabled={uploading || !bucketReady}\n        >\n          {uploading ? (\n            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1 }}>\n              <CircularProgress size={20} color=\"inherit\" />\n              <span>Uploading...</span>\n            </Box>\n          ) : !bucketReady ? (\n            'Initializing...'\n          ) : (\n            'Upload Image'\n          )}\n          <input\n            type=\"file\"\n            accept={bucketConfig.allowedTypes.join(',')}\n            onChange={handleUpload}\n            hidden\n          />\n        </Button>\n        <Typography variant=\"caption\" display=\"block\" sx={{ mt: 1, color: 'text.secondary' }}>\n          Max dimensions: {bucketConfig.maxDimensions.width}x{bucketConfig.maxDimensions.height}px\n          {' | '}Max size: {bucketConfig.maxSize / 1048576}MB\n        </Typography>\n      </Box>\n\n      {error && (\n        <Typography color=\"error\" sx={{ mb: 2 }}>\n          {error}\n        </Typography>\n      )}\n\n      {existingImages?.length > 0 && (\n        <ImageList sx={{ width: '100%', maxHeight: 300 }} cols={4} rowHeight={120}>\n          {existingImages.map((image, index) => {\n            // Handle both string URLs and object URLs\n            const imageUrl = typeof image === 'string' ? image : image.url;\n            // Parse JSON string if needed\n            const finalUrl = (() => {\n              try {\n                const parsed = JSON.parse(imageUrl);\n                return Array.isArray(parsed) ? parsed[0] : imageUrl;\n              } catch (e) {\n                return imageUrl;\n              }\n            })();\n            \n            return (\n              <ImageListItem key={finalUrl} sx={{ position: 'relative' }}>\n                <Box\n                  sx={{\n                    position: 'relative',\n                    height: '100%',\n                    '&:hover .image-actions': {\n                      opacity: 1,\n                    },\n                  }}\n                >\n                  <img\n                    src={finalUrl}\n                    alt={`Image ${index + 1}`}\n                    loading=\"lazy\"\n                    style={{ height: '120px', width: '120px', objectFit: 'cover' }}\n                  />\n                  <Box\n                    className=\"image-actions\"\n                    sx={{\n                      position: 'absolute',\n                      top: 0,\n                      right: 0,\n                      padding: 0.5,\n                      display: 'flex',\n                      gap: 0.5,\n                      opacity: 0,\n                      transition: 'opacity 0.2s',\n                      bgcolor: 'rgba(0, 0, 0, 0.5)',\n                      borderRadius: '0 0 0 8px',\n                    }}\n                  >\n                    {showCopyOption && (\n                      <Tooltip title=\"Copy Markdown\">\n                        <IconButton\n                          size=\"small\"\n                          onClick={() => handleCopyMarkdown(finalUrl)}\n                          sx={{\n                            color: 'white',\n                            '&:hover': {\n                              bgcolor: 'rgba(255, 255, 255, 0.2)',\n                            },\n                          }}\n                        >\n                          <ContentCopyIcon />\n                        </IconButton>\n                      </Tooltip>\n                    )}\n                    <Tooltip title=\"Delete\">\n                      <IconButton\n                        size=\"small\"\n                        onClick={() => onRemove(image.id || image)}\n                        sx={{\n                          color: 'white',\n                          '&:hover': {\n                            bgcolor: 'rgba(255, 255, 255, 0.2)',\n                          },\n                        }}\n                      >\n                        <DeleteIcon />\n                      </IconButton>\n                    </Tooltip>\n                  </Box>\n                </Box>\n              </ImageListItem>\n            );\n          })}\n        </ImageList>\n      )}\n    </Box>\n  )\n}\n\nexport default ImageUpload","import { lazy, Suspense } from 'react'\nimport { Box, CircularProgress } from '@mui/material'\n\nconst MDEditor = lazy(() => import('@uiw/react-md-editor'))\n\nexport default function MarkdownEditor({ value, onChange }) {\n  return (\n    <Suspense fallback={\n      <Box sx={{ display: 'flex', justifyContent: 'center', p: 4 }}>\n        <CircularProgress />\n      </Box>\n    }>\n      <Box sx={{ \n        '& .w-md-editor': { \n          margin: 0,\n          boxShadow: 'none',\n          border: '1px solid rgba(0, 0, 0, 0.23)',\n          borderRadius: 1,\n          height: '1000px'\n        },\n        '& .wmde-markdown': {\n          padding: '16px'\n        },\n        '& .w-md-editor-toolbar': {\n          padding: '8px',\n          borderBottom: '1px solid rgba(0, 0, 0, 0.1)'\n        },\n        '& .w-md-editor-content': {\n          height: 'calc(100% - 40px) !important'\n        },\n        '& .w-md-editor-input': {\n          height: '100% !important'\n        },\n        '& .w-md-editor-text': {\n          height: '100% !important'\n        },\n        '& .w-md-editor-text-input': {\n          padding: '16px !important',\n          height: '100% !important'\n        },\n        '& .w-md-editor-preview': {\n          padding: '16px !important',\n          height: '100% !important'\n        }\n      }}>\n        <MDEditor\n          value={value}\n          onChange={onChange}\n          preview=\"edit\"\n          highlightEnable={false}\n          enableScroll={true}\n        />\n      </Box>\n    </Suspense>\n  )\n} "],"file":"assets/MarkdownEditor-BzJKTVWG.js"}